#include<iostream>
using namespace std;
class dqueue{
public:
int *arr;
int size;
int front;
int rear;
dqueue(int size)
{
    this->size=size;
    arr=new int[size];
    front=-1;
    rear=-1;
}
void pushfront(int data)
{
     // FULL OR NOT
     //single element
     // circular nature
     // normal flow
     if( front==0 && rear==size-1)
     {
        cout<<"Queue is full"<<endl;
     }
     else if( front==-1 )
     {
        front=rear=0;
        arr[rear]=data;
     }
     else if( front==0 && rear!=size-1 )
     {
        front=size-1;
        arr[front]=data;
     }
     else
     {
        front-- ;
        arr[front]=data;
     }
}
void pushrear(int data)
{
  // Empty or not 
  // Single element
  // Circular Nature
  // Normal Flow
  if( front==0 && rear==size-1)
  {
    cout<<"Queue is full"<<endl;
  }
  else if(front==-1)
  {
    front=rear=0;
    arr[rear]=data;
  }
  else if( rear==size-1 && front!=0 )
  {
    rear=0;
    arr[rear]=data;
  }
  else{
    rear++;
    arr[rear]=data;
  }
}
void popfront()
{
   // Empty or Not 
   // single element
   // circular flow
   // normal flow
   if(front==-1)
   {
    cout<<"Queue is empty"<<endl;
   }
   else if(front==rear)
   {
    arr[front]=-1;
    front=-1;
    rear=-1;
   }
   else if(front==size-1)
   {
    arr[front]=-1;
    front=0;
   }
   else{
    arr[front]=-1;
    front++;
   }
}
void poprear()
{
  // empty or not
  // single element
  // circular flow 
  // normal flow
  if(front==-1)
  {
    cout<<"Queue is empty"<<endl;
  }
  else if(front==rear)
  {
    arr[front]=-1;
    front=-1;
    rear=-1;
  }
  else if(rear==0)
  {
    arr[rear]=-1;
    rear=size-1;
  }
  else{
    arr[rear]=-1;
    rear--;
  }
}
void print()
{
    for(int i=0;i<size;i++)
    {
        cout<<arr[i]<<" ";
    }
    cout<<endl;
}
};
int main()
{
    dqueue q(10);
    q.pushfront(10);
    q.pushfront(20);
    q.pushfront(30);
    q.pushfront(40);
    q.pushfront(50);
    q.print();
    q.pushrear(60);
    q.pushrear(70);
    q.pushrear(80);
    q.pushrear(90);
    q.pushrear(100);
    q.print();
    return 0;
}
